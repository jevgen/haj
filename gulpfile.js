var gulp = require('gulp');var sass = require('gulp-sass');var child = require('child_process');var autoprefixer = require("gulp-autoprefixer");var gutil = require('gulp-util');var cssnano = require('gulp-cssnano');function jekyllLogger(buffer) {    buffer.toString()        .split(/\n/)        .forEach((message) => gutil.log('Jekyll: ' + message));}function onError(err) {    console.log(err);    this.emit('end');}/* Development */gulp.task('scss', function () {    return gulp.src('_sass/app.scss')        .pipe(sass())        .on('error', onError)        .pipe(autoprefixer({            browsers: ['last 2 versions', 'ie >= 10']        }))        .pipe(cssnano())        .pipe(gulp.dest('assets'))});gulp.task("watch", function () {    gulp.watch("_sass/**/*.scss", ["scss"]);});gulp.task('jekyll-serve', function () {    gulp.watch("_sass/**/*.scss", ["scss"]);    var jekyllServe = child.spawn('jekyll', ['serve', '--watch', '--incremental', '--drafts']);    jekyllServe.stdout.on('data', jekyllLogger);    jekyllServe.stderr.on('data', jekyllLogger);});/* Build tasks */gulp.task('jekyll-build', ['scss'], () => {    var jekyllBuild = child.spawn('jekyll', ['build']);    jekyllBuild.stdout.on('data', jekyllLogger);    jekyllBuild.stderr.on('data', jekyllLogger);});